# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Release with mvn

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/kafdrop/kafdrop/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'optimizing-ci-builds'
    - run: touch starting_build_uses-checkout_14
    - run: rm starting_build_uses-checkout_14
    - uses: actions/checkout@v3
    - 
      name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - 
      name: app version
      run: |
        echo "app_ver=$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)"
        echo "app_ver=$(mvn -B help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
    -
      name: Build with Maven
      run: mvn -B clean integration-test package assembly:single docker:build
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: rat check
      if: always()
      run: |
         if [ -f /home/runner/work/kafdrop/kafdrop/target/rat.txt ]; then cat /home/runner/work/kafdrop/kafdrop/target/rat.txt; fi
    - name: Check script file exists and execute
      if: always()
      run: |
        [ -f .github/workflows/script.py ] && python .github/workflows/script.py
        [ -f /home/runner/work/kafdrop/kafdrop/optimizing-ci-builds-ci-analysis/job.csv ] || mkdir -p /home/runner/work/kafdrop/kafdrop/optimizing-ci-builds-ci-analysis/; echo "${GITHUB_RUN_ID},${GITHUB_JOB},kafdrop,${GITHUB_WORKFLOW}" > /home/runner/work/kafdrop/kafdrop/optimizing-ci-builds-ci-analysis/job.csv
    - name: Checkout to destination CI-analyzes repo
      uses: actions/checkout@v3
      if: always()
      with:
        path: kafdrop
        ref: '1687017076-548a464'
        repository: 'UT-SE-Research/ci-analyzes'
        token: '${{ secrets.API_TOKEN_GITHUB }}'
        persist-credentials: true
    - name: Copy files to push to another directory
      if: always()
      run: |
        mkdir -p kafdrop/kafdrop/.github/workflows/master/build
        cp -rvT optimizing-ci-builds-ci-analysis kafdrop/kafdrop/.github/workflows/master/build
    - run: echo https://github.com/UT-SE-Research/ci-analyzes/tree/1687017076-548a464/kafdrop/.github/workflows/master/build
    - name: Pushes analysis to another repository
      if: always()
      working-directory: kafdrop
      run: |
        commit_message=$GITHUB_REPOSITORY@$GITHUB_WORKFLOW_SHA
        git config --global user.name 'UT-SE-Research'
        git config --global user.email '${{ secrets.EMAIL }}'
        git add .
        git commit -m $commit_message
        while ! git push origin 1687017076-548a464; do
          git pull --rebase origin 1687017076-548a464
          sleep $((RANDOM % 5 + 1))
        done
# github_release:
    -
      name: github release
      if: ${{ ! endsWith( env.app_ver, '-SNAPSHOT' ) }}
      uses: ncipollo/release-action@v1
      with:
        artifacts: "./target/kafdrop-*.jar"
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.app_ver }}
        commit: "master"
        generateReleaseNotes: true

# Docker hub action
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }} 
    -
      name: push snapshot version
      run: |
        echo publishing docker container $app_ver
        docker push docker.io/obsidiandynamics/kafdrop:$app_ver
    -
      name: push latest if it's a release
      if: ${{ ! endsWith( env.app_ver, '-SNAPSHOT' ) }}
      run: docker push docker.io/obsidiandynamics/kafdrop:latest

